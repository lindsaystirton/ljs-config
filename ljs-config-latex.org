#+TITLE: LJS Config LaTeX
#+OPTIONS: toc:nil H:2 num:nil ^:nil

This is part of [[file:ljs-config.org][LJS-Config]]. This file was (even more than the
others) pretty much copied from Kieran Healy's
[[https://github.com/kjhealy/emacs-starter-kit][emacs starter-kit for
the social sciences]]. I have made some effort to implement use-package.

* LJS Config LaTeX
  Support for editing LaTeX.

** Prettify Math in Buffers
#+begin_src emacs-lisp :tangle yes
(use-package latex-pretty-symbols
  :ensure t)
#+end_src

** Load RefTeX
#+begin_src emacs-lisp :tangle yes
(use-package reftex
  :ensure t
  :commands (reftex-mode turn-on-reftex reftex-citation reftex-index-phrase-mode)
  :hook ((LaTeX-mode . turn-on-reftex)
         (pandoc-mode . turn-on-reftex)
         (org-mode . org-mode-reftex-setup))
  :config
  (setq reftex-enable-partial-scans t
        reftex-save-parse-info t
        reftex-use-multiple-selection-buffers t
        reftex-plug-into-AUCTeX t)
  (defun org-mode-reftex-setup ()
    (load-library "reftex")
    (when (and (buffer-file-name)
               (file-exists-p (buffer-file-name)))
      (reftex-parse-all))
    (define-key org-mode-map (kbd "C-c (") 'reftex-citation))
  (setq reftex-cite-format
        '((?\C-m . "\\cite[]{%l}")
          (?t . "\\textcite{%l}")
          (?a . "\\autocite[]{%l}")
          (?p . "\\parencite{%l}")
          (?f . "\\footcite[][]{%l}")
          (?F . "\\fullcite[]{%l}")
          (?P . "[@%l]")
          (?T . "@%l [p. ]")
          (?x . "[]{%l}")
          (?X . "{%l}")))
  (setq font-latex-match-reference-keywords
        '(("cite" "[{")
          ("cites" "[{}]")
          ("footcite" "[{")
          ("footcites" "[{")
          ("parencite" "[{")
          ("textcite" "[{")
          ("fullcite" "[{")
          ("citetitle" "[{")
          ("citetitles" "[{")
          ("headlessfullcite" "[{")))
  (setq reftex-cite-prompt-optional-args nil
        reftex-cite-cleanup-optional-args t))
#+end_src

** Load Ebib
#+begin_src emacs-lisp :tangle yes
(use-package ebib
  :ensure t
  :commands (ebib)
  :init
  (setq ebib-preload-bib-files '("/Users/ljs46/Documents/bibs/masterbib.bib"))
  :hook (LaTeX-mode . (lambda ()
                        (local-set-key "\C-cb" 'ebib-insert-bibtex-key))))
#+end_src

** AUCTeX Configuration (Replaces all tex blocks)
#+begin_src emacs-lisp :tangle yes
(use-package auctex
  :ensure t
  :defer t
  :hook (LaTeX-mode . my-auctex-mode-setup)
  :config
  (setq TeX-parse-self t
        TeX-auto-save t
        TeX-PDF-mode t
        TeX-view-program-selection '((output-pdf "PDF Tools"))
        TeX-view-program-list '(("PDF Tools" TeX-pdf-tools-sync-view)))

  (defun my-auctex-mode-setup ()
    "My custom AUCTeX mode setup."
    (variable-pitch-mode 1)
    (visual-line-mode 1))

  ;; latexmk, xelatexmk, and Biber integration
  (with-eval-after-load "tex"
    (add-to-list 'TeX-command-list
                 '("latexmk" "latexmk -synctex=1 -shell-escape -pdf %s"
                   TeX-run-TeX nil t :help "Process file with latexmk"))
    (add-to-list 'TeX-command-list
                 '("xelatexmk" "latexmk -synctex=1 -shell-escape -xelatex %s"
                   TeX-run-TeX nil t :help "Process file with xelatexmk"))
    (add-to-list 'TeX-command-list
                 '("Biber" "biber %s" TeX
